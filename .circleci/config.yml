version: 2
jobs:
  build:
    docker:
      - image: circleci/buildpack-deps:latest
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build --target builder -t letsencrypt-inwx-builder .
            docker build -t kegato/letsencrypt-inwx:latest .
      - run:
          name: Extract Artifacts
          command: |
            mkdir artifacts
            docker save -o image.tar kegato/letsencrypt-inwx:latest
            docker create --name builder letsencrypt-inwx-builder
            docker cp builder:/home/rust/src/target/x86_64-unknown-linux-musl/release/letsencrypt-inwx .
            docker cp builder:/home/rust/src/target/x86_64-unknown-linux-musl/debian .
            mv debian/*.deb artifacts/letsencrypt-inwx-x86_64-linux.deb
            zip artifacts/letsencrypt-inwx-x86_64-linux.zip letsencrypt-inwx
      - persist_to_workspace:
          root: .
          paths:
            - ./artifacts
            - ./image.tar

  publish-docker-image:
    docker:
      - image: circleci/buildpack-deps:latest
    steps:
      - attach_workspace:
          at: ./workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i ./workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push kegato/letsencrypt-inwx:latest

  publish-github-release:
    docker:
      - image: circleci/golang:latest
    steps:
      - attach_workspace:
          at: ./workspace
      - run:
          name: "Publish Release on GitHub"
          command: |
            go get github.com/tcnksm/ghr
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ./workspace/artifacts/

  publish-crate:
    docker:
      - image: circleci/rust:latest
    steps:
      - checkout
      - run:
          name: "Publish crate to crates.io"
          command: |
            cargo login ${CRATES_IO_TOKEN}
            cargo publish

workflows:
  version: 2
  main:
    jobs:
      - build:
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+$/
      - publish-docker-image:
          requires:
            - build
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+$/
            branches:
              ignore: /.*/
      - publish-github-release:
          requires:
            - build
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+$/
            branches:
              ignore: /.*/
      - publish-crate:
          filters:
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+$/
            branches:
              ignore: /.*/
  rebuild-docker-image:
    triggers:
      - schedule:
          cron: "0 2 * * 1"
          filters:
            branches:
              only: latest
    jobs:
      - build
      - publish-docker-image:
          requires:
            - build
